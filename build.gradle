buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compileOnly 'org.projectlombok:lombok'
    testCompile('junit:junit')
    compile project(':common')
    compile project(':sms-sender')
    compile project(':email-sender')
}

subprojects {
    apply plugin: 'java'

    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE'
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter-amqp:2.1.4.RELEASE'
        compileOnly 'org.projectlombok:lombok:1.18.6'
        annotationProcessor 'org.projectlombok:lombok:1.18.6'
        compile 'org.springframework:spring-context:5.1.6.RELEASE'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
        testCompile 'junit:junit:4.11'
    }
}

allprojects {
    apply plugin: 'checkstyle'

    checkstyle {
        project.checkstyle.configDir = rootProject.file("config/checkstyle/")
        toolVersion = "8.11"
        ignoreFailures = false
        maxWarnings = 0
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }

    configurations {
        checkstyleConfig
    }
}